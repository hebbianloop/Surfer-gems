#!/bin/bash
#
# Generate FreeSurfer QC statistics & list of failed subjects
# --------------------------------------------------------------------------------------------
# Default Arguments
# -------------------
hname=$(hostname)
mach=$(machine)
cd ~/..
me=$(whoami)
usrpth=$(pwd)
usrpth=$usrpth/$me
cd $usrpth
d=$(date)

QCDIR="./QC"
g=''
subfname="subjects.list"
fsubfname="failed.subjects.list"
# --------------------------------------------------------------------------------------------
# Help Function 
show_help() {
cat <<EOF

Usage: ${0##*/} [-h|--help] [-qd|--qcdir] [-sd|--subjectsdir] [-g|--group] ....
							[-sf|--subsfilename] [fsl|--failedsubslist]

Generates QC data for a list of subjects and writes a list of subjects with failed analyses.  
Writes text files to the specified output directory containing information regarding:

1. Successful completion of recon-all (and any error messages if failed)
2. List of topological defects
3. Euler Number (quantitative metric of defects)
4. Talairach Spatial Correlation
5. Contrast to Noise Ratio

    Options ::

    -h   --help         	displays help
    -qd  --qcdir          	output directory path for subject QC data
    -g   --group 		group label for subjects (can be empty)
    -sf  --subsfilename 	list of subjects to generate QC stats
    -fsl --failedsubslist   	name of file with failed subjects list
    -sd  --subjectsdir          full path to subject directory

    Example ::

        Generate QC statistics for subjects in the list w1.subjects.list and put in ads.subjects.QC.
        Assume SUBJECTS_DIR is not defined and input with sd option. Only evaluates subjects with
        w1 grouping flag.

            ${0##*/} -qd ~/Projects/ADS/FreeSurfer/data/ads.subjects.QC  
                     -sd ~/Projects/ADS/FreeSurfer/data/ads.subjects -g w1 
                     -sf w1.subjects.list -fsl w1.failed.subjects.list

       Generate QC statistics for subjects without a grouping variable with predefined SUBJECTS_DIR.

            ${0##*/} -qd ~/Projects/ADS/FreeSurfer/data/ads.subjects.QC2 -g '' -sf subjects.list -fsl failed.subjects.list

    Default Arguments ::

    	qcdir           	-- $QCDIR
     	fsublist 		-- $fsubfname    	
    	g 			-- $g
    	subfname 		-- $subfname

        !check this!
        SUBJECTS_DIR            -- $SUBJECTS_DIR


   IMPORTANT !!

      Make sure to define your SUBJECTS_DIR to your current project.

      The subsfile name must contain a list of subjects without any grouping variables in each
      subject name.  The grouping variable is appended to the subject names in the list. Data
      must exist for the subject group for this script to run.

EOF
}
# --------------------------------------------------------------------------------------------
# Parse Options
while :; do
    case $1 in
        -h|--help)
        show_help
        exit
        ;;
        -qd|--qcdir)
            if [ -n "$2" ]; then
                QCDIR=$2
                shift
            else
                echo "ERROR: -qd --qcdir requires a non empty option argument.\n" >&2
                exit
            fi
            ;;
        -sd|--subjectsdir)
            if [ -n "$2" ]; then
                SUBJECTS_DIR=$2
                shift
            else
                echo "ERROR: -sd --subjectsdir requires a non empty option argument.\n" >&2
                exit
            fi
            ;;
        -g|--group)
            if [ -n "$2" ]; then
                g=$2
                shift
            else
                echo "ERROR: -g --group requires a non empty option argument.\n" >&2
                exit
            fi
            ;;            
        -sf|--subsfilename)
            if [ -n "$2" ]; then
                subfname=$2
                shift
            else
                echo "ERROR: -sf --subfname requires a non empty option argument.\n" >&2
                exit
            fi
            ;;
        -fsl|--failedsubslist)
            if [ -n "$2" ]; then
                fsubfname=$2
                shift
            else
                echo "ERROR: -fsl --failedsubslist requires a non empty option argument.\n" >&2
                exit
            fi
            ;;                        
        -?*)
            printf 'Warn: Unknown option (ignored): %s\n' "%1" >&2
            ;;
        *)
            break
    esac

    shift
done
# ----------------------------------------------
# Check if Subjects directory exists
if [ ! $SUBJECTS_DIR ]; then
    echo " ‼️  ERROR ‼️  SUBJECTS_DIR DOES NOT EXIST"
    echo "Define SUBJECTS_DIR and re-execute"
    echo "..exiting"
    exit
fi
# ----------------------------------------------
# Build paths to dirs & files, get sub list
subfname="$SUBJECTS_DIR/$subfname"
fsubfname="$SUBJECTS_DIR/$fsubfname"
subs=$(cat $subfname)
# ----------------------------------------------
# Create new missing subjects list
if [ ! -f $fsubfname ]; then
	touch $fsubfname
else
        echo -e "\n..Reseting existing failed subjects list..\n"
	mv $fsubfname "$fsubfname-oldcopy-$d"
	touch $fsubfname
fi
# ---------------------------------------------
# Create QC directory if it doesn't exist
if [ ! -d $QCDIR ]; then
	echo -e "\n..Creating QC output directory:  $QCDIR\n"
	mkdir -p $QCDIR
fi
# ---------------------------------------------------------------------------------------------------------------
# Begin FSQC
echo -e "\n\t\t\t\tPerforming QC & Generating Failed Subjects List"
echo "===================================================================================================="
echo -e "run by $me on $hname-$mach --  $d"
echo "===================================================================================================="
echo -e "\nSubjects Directory     ::  $SUBJECTS_DIR"
echo -e "Group Identifier       ::  $g"
echo -e "Output list file       ::  $fsubfname"
echo -e "QC Data Directory      ::  $QCDIR\n\n"
echo -e "====================================================================================================\n"
# Loop across all subjects and check for failed recon
for s in $subs; do
    # Create subject name based on grouping variable
    if [ ! -z $g ]; then
	   subname="$s-$g"
    else
	   subname="$s"
    fi
    echo "SUBNAME $s"
    # Check if data with subject name exists
    subcheck=$SUBJECTS_DIR/$subname
    echo "SUBCHECK $s"
    if [ -d $subcheck ]; then
	   # Generate QC data if does not exist for this subject
	   check="$QCDIR/$subname"
	   if [ ! -d $check ]; then
	        FSQC-summary -sub "$subname" -outdir $QCDIR
	   fi
	   # Check if recon-all failed
	check="$QCDIR/$subname/recon-all-fail.log"
	   if [ -f $check ]; then
	        echo -e "\n ⚠️  Failed Subject\t\t::  $s\n\n"
	       echo -e "ERROR MESSAGE\t\t:: \n"
	       cat $check
	       #check=$(cat $check)
	       if [ -z "$(cat $check)" ]; then
		      echo -e " ⛔️  !!! RECON WAS PROBABLY INTERRUPTED, NO SUCCESS PATTERN FOUND"
		      echo -e "\t ** delete IsRunning from scripts folder and rerun"
	       fi
	           echo -e "\n... Appending to Failed Subjects List\n"
	           echo $s >> $fsubfname
	           echo "====================================================================================================================================="
        fi
    else
        echo -e "\n\n🚫  NO DATA FOUND for $subcheck 🚫 \n"
        echo -e ".... please check your paths\n\n"
    fi    
done

numfailed=$(wc -l $fsubfname)
echo -e "\n\n!! NUMBER FAILED SUBJECTS :: \n *** $numfailed"
echo "Done FSQC-CHECK!✅ "
