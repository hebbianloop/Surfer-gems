#!/bin/sh
# Preliminary script for printing Freesurfer reconstruction statistics to a table for analysis
#	 TODO: add segmentation numbers for volumetric analysis (ROI specification)

# Default Arguments
cd ~/..
me=$(whoami)
usrpth=$(pwd)
usrpth=$usrpth/$me
binpth="$usrpth/bin/"
cd $usrpth
dte=$(date)

y='surf'
h='both'
m='thickness'
d='tab'
a='aparc'
s="subjects.list"
t='orig'
# ------------------------------------------------------------------------------------------------------------
# Help Function

show_help() {
cat <<EOF

	Usage ${0##*/} [-h|--help] [-t--tablename] [-y|--tabletype] [-h|--hemi] [-m|--measure] [-a|--atlas] [-s|--subjects]

	Generates concatenated tables across subjects using the aparcstats2table FreeSurfer function.

	Options  :: 
	-h --help 		displays help
	-t --tablename 		substring label for table
	-y --tabletype 		surface (surf) or volumetric (vol) statistics
	-m --measure 		brain measurement, varies by table type 
                                    surface: (volume, thickness, thicknessstd, meancurv, gauscurv foldind, curvind, area)
                                    volume:  (volume, mean, std)
	-d --delimiter 		delimiter for output table
	-s --subjects 		filename containing list of subjects (one each row)

	Surface Options ::							
	-h --hemi 		which hemisphere (lh, rh, both), only for surface type							
	-a --atlas 		atlas for parcellation (aparc, aparc.a2009s), only for surface type										

	Default Behavior ::

	The script will generate a table file named aparc.stats.table in the subjects directory for both of the
	lh & rh thickness measurements using the default aparc atlas based on the Killiany/Desikan parcellation. 

                Table type      --      $y
                Hemispheres     --      $h
                Measure         --      $m
                Delimiter       --      $d
                Atlas           --      $a
                Subject List    --      $s
                Table label     --      $t
                Table Name      --      $me.?h.$m.$y.$t.table

	IMPORTANT !!!

	The script will look for data in your default defined SUBECTS_DIR, make sure this variable exists
	and also points to the right place.  This is usually defined in your .bash_profile!

EOF
}
# ------------------------------------------------------------------------------------------------------------
# Option Parsing
while :; do
    case $1 in
        -h|--help)
        show_help
        exit 
        ;;
        -t|--tablename)
            if [ -n "$2" ]; then
                t=$2
                shift
            else
                echo "ERROR:  -t --tablename requires a non-empty option argument.\n" >&2
                exit 
            fi
            ;;
        -y|--tabletype)
            if [ -n "$2" ]; then
                y=$2
                shift
            else
                echo "ERROR:  -y --tabletype requires a non-empty option argument.\n" >&2
                exit 
            fi
            ;;
        -h|--hemi)
            if [ -n "$2" ]; then
                h=$2
                shift
            else
                echo "ERROR:  -h --hemi requires a non-empty option argument.\n" >&2
                exit 
            fi
            ;;                          
        -m|--measure)
            if [ -n "$2" ]; then
                m=$2
                shift
            else
                echo "ERROR:  -m --measure requires a non-empty option argument.\n" >&2
                exit 
            fi
            ;;
        -a|--atlas)
            if [ -n "$2" ]; then
                a=$2
                shift
            else
                echo "ERROR:  -a --atlas requires a non-empty option argument.\n" >&2
                exit 
            fi
            ;;
        -d|--delimiter)
            if [ -n "$2" ]; then
                d=$2
                shift
            else
                echo "ERROR:  -d --delimiter requires a non-empty option argument.\n" >&2
                exit 
            fi
            ;;   
        -s|--subjects)
            if [ -n "$2" ]; then
                s=$2
                shift
            else
                echo "ERROR:  -s --delimiter requires a non-empty option argument.\n" >&2
                exit 
            fi
            ;;                        
        -?*)
            printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
            ;;
        *)
            break
    esac

    shift
done
# ------------------------------------------------------------------------------------------------------------
# Check environment for necessary variables and programs
if [ -z "$SUBJECTS_DIR" ]; then
	echo "ERROR: SUBJECTS_DIR ENVIRONMENTAL VARIABLE NOT DEFINED!!"
	echo " -- please specify \$SUBJECTS_DIR = ???? "
    exit
fi
check=$(which aparcstats2table)
if [ ! "$check" ]; then
	echo "ERROR: FreeSurfer utility: aparcstats2table could not be found"
	echo "-- You may need to reinstall FreeSurfer"
    exit
fi
check=$(which asegstats2table)
if [ ! "$check" ]; then
	echo "ERROR: FreeSurfer utility: asegstats2table could not be found"
	echo "-- You may need to reinstall FreeSurfer"
    exit
fi
# ------------------------------------------------------------------------------------------------------------
# Begin Script
#
subs=$(cat $SUBJECTS_DIR/$s)
cat <<EOF

=========================================================================================================================

	GENERATING FREESURFER MORPHOMETRIC STATISTICS TABLE :: run by $me  -- $dte

		Subjects Directory      --    $SUBJECTS_DIR

                Table type      --      $y
                Hemispheres     --      $h
                Measure         --      $m
                Delimiter       --      $d
                Atlas           --      $a
                Subject List    --      $s
                Table Label     --      $t
                Table Name      --      $me.?h.$m.$y.$t.table

=========================================================================================================================

EOF
# Create Table
# Volume
if [ $y == 'vol' ]; then
	t=$SUBJECTS_DIR/"$me.$m.$y.$t.table"
	# In case user forgot to input measure, use default volume measure
	if [ $m  == "thickness" ]; then
		m='volume'
	fi
    asegstats2table --subjectsfile $SUBJECTS_DIR/$s --tablefile $t -d $d -m $m -v --skip
fi
# Surface
if [ $y == 'surf' ]; then
	if [ $h = 'both' ]; then
		tn="$me.lh.$m.$a.$t.table"	
		aparcstats2table --hemi lh -m $m --subjectsfile $SUBJECTS_DIR/$s -p $a -t $SUBJECTS_DIR/$tn -d $d -v --skip	
		tn="$me.rh.$m.$a.$t.table"	
		aparcstats2table --hemi rh -m $m --subjectsfile $SUBJECTS_DIR/$s -p $a -t $SUBJECTS_DIR/$tn -d $d -v --skip	
	else
		t=$SUBJECTS_DIR/"$me.$h.$m.$a.$t.table"	
		aparcstats2table --hemi $h -m $m --subjectsfile $SUBJECTS_DIR/$s -p $a -t $t -d $d -v --skip
	fi
fi


#  FS-stats
#  
#
#  Created by Shady El Damaty on 11/3/15.
#
